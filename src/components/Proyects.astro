---
import IconAstro from "../icons/IconAstro.astro";
import JavaScript from "../icons/JavaScript.astro";
import LinkButton from "./LinkButton.astro";
import GitHub from "../icons/GitHub.astro";
import Link from "../icons/Link.astro";
import Python from "../icons/Python.astro";
import Golang from "../icons/Golang.astro";
import Csharp from "../icons/Csharp.astro";

const TAGS = {
  ASTRO: {
    name: "Astro",
    class: "bg-white/10 hover:bg-white/15 transition duration-300 border border-white/10",
    icon: IconAstro,
  },
  JAVASCRIPT: {
    name: "JavaScript",
    class: "bg-yellow-200/10 hover:bg-white/15 transition duration-300 border border-white/10",
    icon: JavaScript,
  },
  PYTHON: {
    name: "Python",
    class: "bg-yellow-200/10 hover:bg-white/15 transition duration-300 border border-white/10",
    icon: Python,
  },
  GOLANG: {
    name: "Golang",
    class: "bg-cyan-200/10 hover:bg-white/15 transition duration-300 border border-white/10",
    icon: Golang,
  },
  CSHARP: {
    name: "Csharp",
    class: "bg-violet-400/10 hover:bg-white/15 transition duration-300 border border-white/10",
    icon: Csharp,
  },
};

const PROJECTS = [
  {
    title: "Probando Frameworks Web",
    description:
      "API REST para la administraci贸n de un refugio de mascotas, replicada en diferentes lenguajes, incluye autenticaci贸n basada en tokens y esquematizaci贸n de base de datos",
    github: "https://github.com/BryanChavajay/probando-frameworks-web-backend",
    image: "./project02.webp",
    tags: [TAGS.PYTHON, TAGS.CSHARP, TAGS.JAVASCRIPT, TAGS.GOLANG],
  },
  {
    title: "Retro Arcade",
    description:
      "Plataforma gratuita que alberga una amplia colecci贸n variada de juegos retros. Creada desde cero utilizando Astro, html, css y JavaScript. Ven y diviertete.",
    link: "#",
    github: "#",
    image: "./project01.webp",
    tags: [TAGS.JAVASCRIPT, TAGS.ASTRO],
  },
];
---

<section class="grid gap-6 grid-cols-1">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class="overflow-hidden border border-white/10 rounded-md bg-gray-800/30 transition duration-500 hover:scale-105">
        <div class="flex flex-col sm:flex-row">
          <div class="w-full sm:w-2/5 md:w-2/5 lg:w-1/2">
            <img
              src={image}
              alt={title}
              loading="lazy"
              class="h-56 w-full object-cover sm:h-full rounded-md"
            />
          </div>
          <div class="flex flex-col justify-between w-full sm:w-3/5 md:w-3/5 lg:w-1/2 p-4">
            <div>
              <div class="p-0 pb-2">
                <h3 class="text-xl font-semibold">{title}</h3>
              </div>
              <ul class="flex flex-wrap mb-2 gap-x-2 gap-y-2">
                {tags.map((tag) => (
                  <li>
                    <span
                      class={`flex gap-x-2 rounded-full text-xs py-1 px-2 ${tag.class}`}
                    >
                      <tag.icon class="size-4" />
                      {tag.name}
                    </span>
                  </li>
                ))}
              </ul>
              <div class="p-0 pb-4">
                <p class="text-base text-muted-foreground text-gray-300">{description}</p>
              </div>
            </div>
            <div>
              <div class="flex justify-start gap-2 p-0">
                {github && (
                  <LinkButton href={github}>
                    <GitHub class="size-6" />
                    Code
                  </LinkButton>
                )}
                {link && (
                  <LinkButton href={link}>
                    <Link class="size-4" />
                    Preview
                  </LinkButton>
                )}
              </div>
            </div>
          </div>
        </div>
      </article>
    ))
  }
</section>
